// Generated by CoffeeScript 1.7.1
(function() {
  var dbConfig, dbHelper, dbSnippetRevision, dbTag, insertTag, single, _;

  dbHelper = require('mysql-dbhelper');

  dbSnippetRevision = require("./dbSnippetRevision");

  dbConfig = require('../../config').dbConfig();

  dbTag = require("./dbTag");

  _ = require('underscore');


  /*
      新建
   */

  exports["new"] = function(snippet, cb) {
    var conn, sql;
    sql = "insert into snippet(\n	title,content,html,addTime,updateTime,version,state\n)values(\n	?,?,?,now(),now(),1,0\n)";
    conn = dbHelper.createConnection(dbConfig);
    return conn.insert(sql, [snippet.title, snippet.content, snippet.html], function(err, success, insertId) {
      if (err) {
        conn.end();
        return cb(err);
      } else if (!success) {
        conn.end();
        return cb(new Error("fail"));
      } else {
        return insertTag(conn, insertId, snippet.tags, function(err) {
          conn.end();
          if (err) {
            return cb(err);
          } else {
            return cb(null, insertId);
          }
        });
      }
    });
  };


  /*
      获取列表
   */

  exports.list = function(cb) {
    var conn, sql;
    sql = "select id,title,addTime\nfrom snippet\nwhere state=0\norder by id desc;";
    conn = dbHelper.createConnection(dbConfig);
    return conn.execute(sql, function(err, snippets) {
      conn.end();
      return cb(err, snippets);
    });
  };


  /*
      单条
   */

  single = exports.single = function(id, cb) {
    var conn, sql;
    sql = "select *\nfrom snippet\nwhere id=?\nlimit 1;";
    conn = dbHelper.createConnection(dbConfig);
    return conn.executeFirstRow(sql, [id], function(err, row) {
      if (row) {
        sql = "select t.id,t.name\nfrom snippet_tag st\ninner join tag t\non st.tagId=t.id\nwhere st.snippetId=?;";
        return conn.execute(sql, [id], function(err, results) {
          conn.end();
          row.tags = results;
          return cb(err, row);
        });
      } else {
        conn.end();
        return cb(err, row);
      }
    });
  };


  /*
      更新
   */

  exports.update = function(snippet, cb) {
    return single(snippet.id, function(err, snip) {
      if (err) {
        return cb(err);
      } else {
        return dbSnippetRevision["new"](snip, function(err) {
          var conn, sql;
          if (err) {
            return cb(err);
          } else {
            conn = dbHelper.createConnection(dbConfig);
            sql = "update snippet\nset title=?,\ncontent=?,\nhtml=?,\nupdateTime=now(),\nversion=version+1\nwhere id=?";
            return conn.update(sql, [snippet.title, snippet.content, snippet.html, snippet.id], function(err) {
              return insertTag(conn, snippet.id, snippet.tags, function() {
                conn.end();
                return cb.apply(this, arguments);
              });
            });
          }
        });
      }
    });
  };


  /*
      delete
   */

  exports["delete"] = function(id, cb) {
    var conn, sql;
    sql = "update snippet set state=4 where id=?";
    conn = dbHelper.createConnection(dbConfig);
    return conn.update(sql, [id], function(err, success) {
      conn.end();
      return cb(err, success);
    });
  };


  /*
      插入标签
   */

  insertTag = function(conn, snippetId, tags, cb) {
    var sql;
    sql = "delete from snippet_tag\nwhere snippetId=?";
    return conn.execute(sql, [snippetId], function(err) {
      var finished, tag, _i, _len, _results;
      if (err) {
        conn.end();
        return cb(err);
      } else {
        finished = _.after(tags.length, function() {
          conn.end();
          return cb(err);
        });
        _results = [];
        for (_i = 0, _len = tags.length; _i < _len; _i++) {
          tag = tags[_i];
          _results.push(dbTag["new"](conn, tag, function(err, tagId) {
            if (err) {
              return console.dir(err);
            } else {
              sql = "insert into snippet_tag(snippetId,tagId,addTime) values(?,?,now())";
              return conn.insert(sql, [snippetId, tagId], function(err) {
                if (err) {
                  console.dir(err);
                }
                return finished();
              });
            }
          }));
        }
        return _results;
      }
    });
  };

}).call(this);

//# sourceMappingURL=dbSnippet.map
