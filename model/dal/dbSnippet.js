// Generated by CoffeeScript 1.7.1
(function() {
  var dbConfig, dbHelper, dbSnippetRevision, insertTag, insert_Snippet_Tag, single, _;

  dbHelper = require('mysql-dbhelper');

  dbSnippetRevision = require("./dbSnippetRevision");

  dbConfig = require('../../config').dbConfig();

  _ = require('underscore');


  /*
      新建
   */

  exports["new"] = function(snippet, cb) {
    var conn, sql;
    sql = "insert into snippet(\n	title,content,html,addTime,updateTime,version,state\n)values(\n	?,?,?,now(),now(),1,0\n)";
    conn = dbHelper.createConnection(dbConfig);
    conn.connect();
    return conn.insert(sql, [snippet.title, snippet.content, snippet.html], function(err, success, insertId) {
      var finished, tag, _i, _len, _ref, _results;
      if (err) {
        conn.end();
        return cb(err);
      } else if (!success) {
        conn.end();
        return cb(new Error("fail"));
      } else {
        finished = _.after(snippet.tags.length, function() {
          conn.end();
          return cb(null, insertId);
        });
        _ref = snippet.tags;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tag = _ref[_i];
          _results.push(insertTag(conn, insertId, tag, function(err, success, insertId) {
            if (err) {
              console.dir(err);
            }
            return finished();
          }));
        }
        return _results;
      }
    });
  };


  /*
      获取列表
   */

  exports.list = function(cb) {
    var conn, sql;
    sql = "select id,title,addTime\nfrom snippet\nwhere state=0\norder by id desc;";
    conn = dbHelper.createConnection(dbConfig);
    conn.connect();
    return conn.execute(sql, function(err, snippets) {
      conn.end();
      return cb(err, snippets);
    });
  };


  /*
      单条
   */

  single = exports.single = function(id, cb) {
    var conn, sql;
    sql = "select *\nfrom snippet\nwhere id=?\nlimit 1;";
    conn = dbHelper.createConnection(dbConfig);
    conn.connect();
    return conn.executeFirstRow(sql, [id], function(err, row) {
      sql = "select t.id,t.name\nfrom snippet_tag st\ninner join tag t\non st.tagId=t.id\nwhere st.snippetId=?;";
      if (row) {
        return conn.execute(sql, [id], function(err, results) {
          conn.end();
          row.tags = results;
          return cb(err, row);
        });
      } else {
        conn.end();
        return cb(err, row);
      }
    });
  };


  /*
      更新
   */

  exports.update = function(snippet, cb) {
    return single(snippet.id, function(err, snip) {
      if (err) {
        return cb(err);
      } else {
        return dbSnippetRevision["new"](snip, function(err) {
          var conn, sql;
          if (err) {
            return cb(err);
          } else {
            conn = dbHelper.createConnection(dbConfig);
            conn.connect();
            sql = "update snippet\nset title=?,\ncontent=?,\nhtml=?,\nupdateTime=now(),\nversion=version+1\nwhere id=?";
            return conn.update(sql, [snippet.title, snippet.content, snippet.html, snippet.id], function(err, success) {
              sql = "delete from snippet_tag\nwhere snippetId=?";
              return conn.execute(sql, [snippet.id], function(err) {
                var finished, tag, _i, _len, _ref, _results;
                if (err) {
                  conn.end();
                  return cb(err);
                } else {
                  finished = _.after(snippet.tags.length, function() {
                    conn.end();
                    return cb(err, success);
                  });
                  _ref = snippet.tags;
                  _results = [];
                  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                    tag = _ref[_i];
                    _results.push(insertTag(conn, snippet.id, tag, function(err, success) {
                      if (err) {
                        console.dir(err);
                      }
                      return finished();
                    }));
                  }
                  return _results;
                }
              });
            });
          }
        });
      }
    });
  };


  /*
      delete
   */

  exports["delete"] = function(id, cb) {
    var conn, sql;
    sql = "update snippet set state=4 where id=?";
    conn = dbHelper.createConnection(dbConfig);
    conn.connect();
    return conn.update(sql, [id], function(err, success) {
      conn.end();
      return cb(err, success);
    });
  };


  /*
      插入标签
   */

  insertTag = function(conn, snippetId, tag, cb) {
    var sql;
    sql = "select id from tag where name=? limit 1";
    return conn.executeScalar(sql, [tag], function(err, tagId) {
      if (err) {
        return cb(err);
      } else {
        if (!tagId) {
          sql = "insert into tag(name,addTime) values(?,now())";
          return conn.insert(sql, [tag], function(err, success, tagId) {
            if (err) {
              return cb(err);
            } else if (!success) {
              return cb(new Error("fail to add tag " + tag));
            } else {
              return insert_Snippet_Tag(conn, snippetId, tagId, cb);
            }
          });
        } else {
          return insert_Snippet_Tag(conn, snippetId, tagId, cb);
        }
      }
    });
  };


  /*
      插入单个标签
   */

  insert_Snippet_Tag = function(conn, snippetId, tagId, cb) {
    var sql;
    sql = "insert into snippet_tag(snippetId,tagId,addTime) values(?,?,now())";
    return conn.insert(sql, [snippetId, tagId], cb);
  };

}).call(this);

//# sourceMappingURL=dbSnippet.map
