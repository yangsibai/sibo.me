// Generated by CoffeeScript 1.7.1
(function() {
  var dataHelper, snippetBll;

  snippetBll = require('../model/bll/snippet');

  dataHelper = require('../helper/dataHelper');

  exports.$mvcConfig = {
    route: {
      single: {
        path: "/snippets/single/:id"
      },
      edit: {
        path: "/snippets/edit/:id"
      },
      "delete": {
        path: "/snippets/delete/:id"
      }
    }
  };


  /*
      /snippets/
   */

  exports.index = function(req, res) {
    return snippetBll.list(function(err, snippets) {
      var snippet, _i, _len;
      if (err) {
        return res.send({
          code: 1,
          message: err.message
        });
      } else {
        for (_i = 0, _len = snippets.length; _i < _len; _i++) {
          snippet = snippets[_i];
          snippet.addTime = dataHelper.prettyDateTime(snippet.addTime);
        }
        return res.render("index", {
          auth: req.session.auth,
          title: "Snippets",
          snippets: snippets
        });
      }
    });
  };


  /*
      /snippets/single/1
   */

  exports.single = function(req, res) {
    var sId;
    sId = req.params.id;
    return snippetBll.single(sId, function(err, snippet) {
      if (err) {
        return res.send({
          code: 1,
          message: err.message
        });
      } else {
        snippet.addTime = dataHelper.prettyDateTime(snippet.addTime);
        return res.render("single", {
          auth: req.session.auth,
          title: snippet.title,
          snippet: snippet
        });
      }
    });
  };


  /*
      编辑
   */

  exports.edit_GET_POST_$auth = function(req, res) {
    var content, id, tags, title;
    id = req.params.id;
    if (req.method === "GET") {
      return snippetBll.single(id, function(err, snip) {
        var tag, tagNameArr, _i, _len, _ref;
        if (err) {
          throw err;
        } else {
          tagNameArr = [];
          _ref = snip.tags;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            tag = _ref[_i];
            tagNameArr.push(tag.name);
          }
          snip.tags = tagNameArr.join('|');
          return res.render("edit", {
            title: "Edit - " + snip.title,
            snippet: snip
          });
        }
      });
    } else {
      title = req.body.title;
      content = req.body.content;
      tags = req.body.tags;
      return snippetBll.update({
        id: id,
        title: title,
        content: content,
        tags: tags
      }, function(err) {
        if (err) {
          return res.send({
            code: 1,
            message: err.message
          });
        } else {
          return res.send({
            code: 0,
            message: "ok"
          });
        }
      });
    }
  };


  /*
      new snippet
      /snippets/new
   */

  exports.new_GET_POST_$auth = function(req, res) {
    if (req.method === "GET") {
      return res.render("new");
    } else {
      return snippetBll["new"](req.body, function(err, id) {
        if (err) {
          return res.send({
            code: 1,
            message: err.message
          });
        } else {
          return res.send({
            code: 0,
            message: "ok",
            id: id
          });
        }
      });
    }
  };


  /*
      删除
   */

  exports.delete_$auth = function(req, res) {
    var id;
    id = req.params.id;
    return snippetBll["delete"](id, function(err) {
      if (err) {
        res.write(err.message);
        return res.end();
      } else {
        return res.redirect("/snippets");
      }
    });
  };

}).call(this);

//# sourceMappingURL=snippets.map
